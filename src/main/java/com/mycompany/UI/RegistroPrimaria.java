/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.UI;

import com.mycompany.Entity.AlumnoPrimaria;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.util.Collections;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Hecta
 */
public class RegistroPrimaria extends javax.swing.JFrame {

    DefaultTableModel modelo = new DefaultTableModel();
    ArrayList<AlumnoPrimaria> listaAlumnos = new ArrayList<>();
    
    /**
     * Creates new form RegistroAlumnos
     */
    public RegistroPrimaria() {
        initComponents();
        this.setTitle("EduTrack");
        this.setSize(800, 600);
        this.setLocationRelativeTo(null);
        modelo.addColumn("Nombre");
        modelo.addColumn("Edad");
        modelo.addColumn("Nivel");
        modelo.addColumn("Promedio");
        readFile();
        refreshTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaAlumnos = new javax.swing.JTable();
        NombreAlumno = new javax.swing.JTextField();
        DireccionAlumno = new javax.swing.JTextField();
        EdadAlumno = new javax.swing.JSpinner();
        jLabel5 = new javax.swing.JLabel();
        cboGrade = new javax.swing.JSpinner();
        AgregarAlumno = new javax.swing.JButton();
        BorrarAlumno = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        Ordenamiento = new javax.swing.JComboBox<>();

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Nombre");

        jLabel2.setText("Edad");

        jLabel3.setText("Direccion");

        tablaAlumnos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tablaAlumnos);

        NombreAlumno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NombreAlumnoActionPerformed(evt);
            }
        });

        DireccionAlumno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DireccionAlumnoActionPerformed(evt);
            }
        });

        EdadAlumno.setModel(new javax.swing.SpinnerNumberModel(5, null, null, 1));

        jLabel5.setText("Promedio");

        cboGrade.setModel(new javax.swing.SpinnerNumberModel(0.0d, null, 100.0d, 0.01d));

        AgregarAlumno.setText("Agregar");
        AgregarAlumno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AgregarAlumnoActionPerformed(evt);
            }
        });

        BorrarAlumno.setText("Borrar");
        BorrarAlumno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BorrarAlumnoActionPerformed(evt);
            }
        });

        jLabel4.setText("Ordenar por");

        Ordenamiento.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nombre", "Aprobacion" }));
        Ordenamiento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OrdenamientoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(DireccionAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(NombreAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(EdadAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 753, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cboGrade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(23, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(AgregarAlumno)
                        .addGap(26, 26, 26)
                        .addComponent(BorrarAlumno)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(Ordenamiento, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(125, 125, 125))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(NombreAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(EdadAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(DireccionAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cboGrade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 107, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AgregarAlumno)
                    .addComponent(BorrarAlumno)
                    .addComponent(jLabel4)
                    .addComponent(Ordenamiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void NombreAlumnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NombreAlumnoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NombreAlumnoActionPerformed

    private void DireccionAlumnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DireccionAlumnoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DireccionAlumnoActionPerformed

    private void AgregarAlumnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AgregarAlumnoActionPerformed
        // TODO add your handling code here:
        try {
            AlumnoPrimaria alumno = new AlumnoPrimaria();
            alumno.setName(NombreAlumno.getText());
            alumno.setAge(Integer.parseInt(EdadAlumno.getValue().toString()));
            alumno.setAddress(DireccionAlumno.getText());
            alumno.setStage("Primaria");
            alumno.setGrade(Double.parseDouble(cboGrade.getValue().toString()));
            listaAlumnos.add(alumno);
            refreshTable();
            
            // Escribir archivo
            try (FileOutputStream f = new FileOutputStream("myObjects.txt");
            ObjectOutputStream o = new ObjectOutputStream(f);){
                o.writeObject(listaAlumnos);
                o.close();
                f.close();
                
            } catch (FileNotFoundException e) {
                System.out.println("File not found");
                throw new RuntimeException(e);
            } catch (IOException ioe) {
                System.out.println("Error while writing");
            }           
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Error");
        }       
    }//GEN-LAST:event_AgregarAlumnoActionPerformed

    private void BorrarAlumnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BorrarAlumnoActionPerformed
        // TODO add your handling code here:
        NombreAlumno.setText("");
        EdadAlumno.setValue(5);
        DireccionAlumno.setText("");
        cboGrade.setValue(0);
        listaAlumnos.remove(listaAlumnos.size() - 1);
        refreshTable();
        
        // Escribir archivo
        try {
            FileOutputStream f = new FileOutputStream(new File("myObjects.txt"));
            ObjectOutputStream o = new ObjectOutputStream(f);
                        
            o.writeObject(listaAlumnos);
            o.close();
            f.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,"cannot write");
        }
        
    }//GEN-LAST:event_BorrarAlumnoActionPerformed

    private void OrdenamientoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OrdenamientoActionPerformed
        // TODO add your handling code here:
        if("Aprobacion".equals(Ordenamiento.getSelectedItem().toString())) {
            // Expresion lambda para ordenar el arraylist por calificacion
            Collections.sort(listaAlumnos, (a1, a2) -> Double.compare(a2.getGrade(), a1.getGrade()));
        } else {
            // Expresion lambda para ordenar por orden alfabetico el arraylist
            Collections.sort(listaAlumnos, (a1, a2) -> a1.getName().compareTo(a2.getName()));
        }
        refreshTable();
    }//GEN-LAST:event_OrdenamientoActionPerformed

    
    /**
     * Refrescar Tabla
     */
    public void refreshTable() {
        // Borrar todos los elementos del modelo
        while (modelo.getRowCount()> 0) {            
            modelo.removeRow(0);
        }
        
        for (AlumnoPrimaria alumno : listaAlumnos) {
            Object a[] = new Object[4];
            a[0] = alumno.getName();
            a[1] = alumno.getAge();
            a[2] = alumno.getStage();
            a[3] = alumno.getGrade();
            modelo.addRow(a);
        }
        tablaAlumnos.setModel(modelo);
    }
    
    /**
     * Leer archivo
     */
    public void readFile() {
        try (FileInputStream fi = new FileInputStream(new File("myObjects.txt"));
            ObjectInputStream oi = new ObjectInputStream(fi);){
            
            listaAlumnos = (ArrayList) oi.readObject();
            oi.close();
            fi.close();
            
            for(AlumnoPrimaria alumno : listaAlumnos) {
                System.out.println(alumno);
            }
        } catch (Exception e) {
            System.out.println("File not found");
        }
        
        //refreshTable();
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegistroPrimaria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegistroPrimaria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegistroPrimaria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegistroPrimaria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegistroPrimaria().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AgregarAlumno;
    private javax.swing.JButton BorrarAlumno;
    private javax.swing.JTextField DireccionAlumno;
    private javax.swing.JSpinner EdadAlumno;
    private javax.swing.JTextField NombreAlumno;
    private javax.swing.JComboBox<String> Ordenamiento;
    private javax.swing.JSpinner cboGrade;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable tablaAlumnos;
    // End of variables declaration//GEN-END:variables
}
